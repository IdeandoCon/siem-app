{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { UserService } from \"src/app/api/user.service\";\nimport { URL_TOKEN } from \"src/app/config/config\";\nimport { URL_SERVIDOR } from \"src/app/config/config\";\nimport { AlertController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport * as moment from 'moment';\nimport { Chart } from \"chart.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/api/user.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"../components/header/header.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = [\"BarChartSemanal\"];\nconst _c1 = [\"BarChartMunicipales\"];\nconst _c2 = [\"BarChartMensual\"];\nconst _c3 = [\"BarChartAnual\"];\nconst _c4 = [\"BarChartSeleccionMensual\"];\nconst _c5 = [\"BarChartSeleccionDiaria\"];\n\nfunction Tab2Page_ion_card_header_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card-header\");\n    i0.ɵɵelement(1, \"img\", 17);\n    i0.ɵɵelementStart(2, \"ion-card-title\", 18);\n    i0.ɵɵtext(3, \"RECAUDACI\\u00D3N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const logo_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", logo_r10.img, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction Tab2Page_h4_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1, \"Por favor indique la fecha\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Tab2Page_ion_spinner_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 19);\n  }\n}\n\nfunction Tab2Page_h4_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1, \"Por favor indique la fecha\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Tab2Page_ion_spinner_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 19);\n  }\n}\n\nexport let Tab2Page = /*#__PURE__*/(() => {\n  class Tab2Page {\n    constructor(http, userService, loadingCtrl, alertController) {\n      this.http = http;\n      this.userService = userService;\n      this.loadingCtrl = loadingCtrl;\n      this.alertController = alertController;\n      this.customYearValues = [2020, 2019, 2018, 2017, 2016, 2015];\n      this.customMonthValues = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n      this.customDayShortNames = [\"lunes\", \"martes\", \"miercoles\", \"jueves\", \"viernes\"];\n      this.isLoadingMensual = true;\n      this.isLoadingDiario = true;\n      this.apiSemanal = [];\n      this.apiDiaExacto = [];\n      this.customPickerOptions = {\n        buttons: [{\n          text: \"Save\",\n          handler: time => {}\n        }, {\n          text: \"Log\",\n          handler: () => {\n            return false;\n          }\n        }]\n      };\n    }\n\n    ngOnDestroy() {\n      this.getLogo();\n      this.var_semanal(event);\n      this.var_ingreso_mensual();\n      this.var_ingreso_capital();\n      this.var_ingreso_jurisdiccionMunicipal();\n      this.var_ingresodelMes(Date).then(() => {});\n      this.var_ingreso_pordia(Date);\n      this.createBarChartSemanal();\n      this.createBarChartMensual();\n      this.createJurisdiccionMunicipal();\n      this.createBarChartSeleccionMensual();\n      this.createBarChartSeleccionDiario();\n    }\n\n    doRefresh(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('Begin async operation');\n        this.getLogo();\n        this.var_semanal(event);\n        this.var_ingreso_mensual();\n        this.var_ingreso_capital();\n        this.var_ingreso_jurisdiccionMunicipal();\n        this.var_ingresodelMes(Date).then(() => {});\n        this.var_ingreso_pordia(Date);\n        const alert = yield this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Éxitos',\n          subHeader: '',\n          message: 'Los datos se recargaron con éxito.',\n          buttons: ['OK']\n        });\n        yield alert.present();\n      });\n    }\n\n    ionViewDidEnter() {\n      this.createBarChartSemanal();\n      this.createBarChartMensual();\n      this.createJurisdiccionMunicipal();\n      this.createBarChartSeleccionMensual();\n      this.createBarChartSeleccionDiario();\n    }\n\n    ionViewWillEnter() {\n      this.getLogo();\n      this.var_semanal(event);\n      this.var_ingreso_mensual();\n      this.var_ingreso_capital();\n      this.var_ingreso_jurisdiccionMunicipal();\n      this.var_ingresodelMes(Date).then(() => {});\n      this.var_ingreso_pordia(Date);\n    }\n\n    getLogo() {\n      this.userService.getLogos().subscribe(response => {\n        this.logos = response;\n      });\n    }\n\n    var_semanal(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const my_url = URL_SERVIDOR + \"/recaudacion-semanal/2019/35\";\n        var token = URL_TOKEN;\n        const headers = {\n          \"content-type\": \"application/json\",\n          \"x-token\": token\n        };\n        yield this.http.get(my_url, {\n          headers: headers\n        }).subscribe(data => {\n          this.apiSemanal = [];\n          const arrayInit = data.resultado;\n          var diaActual;\n\n          for (let i = 0; i < arrayInit.length; i++) {\n            const dia = arrayInit[i].dia;\n\n            if (diaActual !== dia) {\n              const numberPush = arrayInit[i].importe;\n              diaActual = arrayInit[i].dia;\n              this.apiSemanal.push(numberPush);\n            } else {\n              const numberAdd = arrayInit[i].importe;\n              const arrayToAdd = this.apiSemanal.length - 1;\n              this.apiSemanal[arrayToAdd] += numberAdd;\n            }\n          }\n\n          this.apiLeyendaSemanal = \"Total\";\n          event.target.complete();\n        });\n      });\n    }\n\n    var_ingreso_mensual() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const my_url = URL_SERVIDOR + \"/recaudacion-mensual/2019\";\n        var token = URL_TOKEN;\n        const headers = {\n          \"content-type\": \"application/json\",\n          \"x-token\": token\n        };\n        yield this.http.get(my_url, {\n          headers: headers\n        }).subscribe(data => {\n          let ingresoMensual = data[\"resultado\"].map(data => data.importe);\n          this.apiIngresoMensual = ingresoMensual;\n          this.createBarChartMensual();\n        });\n      });\n    }\n\n    var_ingreso_capital() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const my_url = URL_SERVIDOR + \"/ingreso-capital/2020/200101/200131\";\n        var token = URL_TOKEN;\n        const headers = {\n          \"content-type\": \"application/json\",\n          \"x-token\": token\n        };\n        yield this.http.get(my_url, {\n          headers: headers\n        }).subscribe(data => {\n          this.apiDiario = data;\n          this.createBarChartSemanal();\n        });\n      });\n    }\n\n    var_ingresodelMes(date) {\n      return __awaiter(this, void 0, void 0, function* () {\n        var mi_fecha = moment(date).format(\"M\");\n        const my_url = URL_SERVIDOR + \"/recaudacion-mensual/2020/\" + mi_fecha;\n        var token = URL_TOKEN;\n        const headers = {\n          \"content-type\": \"application/json\",\n          \"x-token\": token\n        };\n        this.http.get(my_url, {\n          headers: headers\n        }).subscribe(data => {\n          let apiDelImporteElegido = data.resultado.map(data => data.importe);\n          let apiDelLeyendaElegida = data.resultado.map(data => data.leyenda);\n          this.apiSeleccionMensualImporte = apiDelImporteElegido;\n          this.apiSeleccionMensualLeyenda = apiDelLeyendaElegida;\n          this.createBarChartSeleccionMensual();\n          this.isLoadingMensual = false;\n        });\n      });\n    }\n\n    var_ingreso_pordia(myday) {\n      return __awaiter(this, void 0, void 0, function* () {\n        var weeknumber = moment(myday).week();\n        const my_url = URL_SERVIDOR + \"/recaudacion-semanal/2020/\" + weeknumber;\n        var token = URL_TOKEN;\n        const headers = {\n          \"content-type\": \"application/json\",\n          \"x-token\": token\n        };\n        yield this.http.get(my_url, {\n          headers: headers\n        }).subscribe(data => {\n          let ArrayDelDia = data.resultado;\n          var DiaSeleccionado = ArrayDelDia.reduce(function (h, obj) {\n            h[obj.dia] = (h[obj.dia] || []).concat(obj);\n            return h;\n          }, {});\n          const date = moment(myday);\n          this.apiDiaExacto = date.weekday() + 1;\n          let LeyendaElegida = DiaSeleccionado[this.apiDiaExacto].map(DiaSeleccionado => DiaSeleccionado.leyenda);\n          let ImporteElegida = DiaSeleccionado[this.apiDiaExacto].map(DiaSeleccionado => DiaSeleccionado.importe);\n          this.apiLeyendaElegidaDiaria = LeyendaElegida;\n          this.apiImporteElegidadiaria = ImporteElegida;\n          this.createBarChartSeleccionDiario();\n          this.isLoadingDiario = false;\n        });\n      });\n    }\n\n    createBarChartSeleccionDiario() {\n      const ctx = this.BarChartSeleccionDiaria.nativeElement;\n      ctx.height = 400;\n      this.BarsSeleccionDiaria = new Chart(ctx, {\n        type: \"doughnut\",\n        data: {\n          labels: this.apiLeyendaElegidaDiaria,\n          datasets: [{\n            label: \"# Miles de pesos\",\n            data: this.apiImporteElegidadiaria,\n            backgroundColor: ['rgba(255, 99, 133, 0.3)', 'rgba(54, 161, 235, 0.3)', 'rgba(252, 79, 48, 0.3)', 'rgba(5, 140, 107, 0.3)', 'rgba(74, 3, 82, 0.3)', 'rgba(38, 36, 36, 0.3)'],\n            hoverBackgroundColor: ['#ff6385', '#36a1eb', '#fc4f30', '#058c6b', '#4a0352', '#262424']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n\n    var_ingreso_jurisdiccionMunicipal() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const my_url = URL_SERVIDOR + \"/jur-municipal/2020/20200101/20200110\";\n        var token = URL_TOKEN;\n        const headers = {\n          \"content-type\": \"application/json\",\n          \"x-token\": token\n        };\n        yield this.http.get(my_url, {\n          headers: headers\n        }).subscribe(data => {\n          let ingresoJurisdiccionMunicipal = data[\"resultado\"].map(data => data.importe);\n          let leyendaJurisdiccionMunicipal = data[\"resultado\"].map(data => data.leyenda);\n          this.apiIngresoMunicipal = ingresoJurisdiccionMunicipal;\n          this.apiLeyendaMunicipal = leyendaJurisdiccionMunicipal;\n          this.createJurisdiccionMunicipal();\n        });\n      });\n    }\n\n    createBarChartSeleccionMensual() {\n      const ctx = this.BarChartSeleccionMensual.nativeElement;\n      ctx.height = 400;\n      this.BarsSeleccionMensual = new Chart(ctx, {\n        type: \"doughnut\",\n        data: {\n          labels: this.apiSeleccionMensualLeyenda,\n          datasets: [{\n            label: \"# Miles de pesos\",\n            data: this.apiSeleccionMensualImporte,\n            backgroundColor: ['rgba(255, 99, 133, 0.3)', 'rgba(54, 161, 235, 0.3)', 'rgba(252, 79, 48, 0.3)', 'rgba(5, 140, 107, 0.3)', 'rgba(74, 3, 82, 0.3)', 'rgba(38, 36, 36, 0.3)'],\n            hoverBackgroundColor: ['#ff6385', '#36a1eb', '#fc4f30', '#058c6b', '#4a0352', '#262424']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n\n    createBarChartSemanal() {\n      const ctx = this.BarChartSemanal.nativeElement;\n      ctx.height = 400;\n      this.BarSemanal = new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: this.customDayShortNames,\n          datasets: [{\n            label: this.apiLeyendaSemanal,\n            data: this.apiSemanal,\n            backgroundColor: ['rgba(255, 99, 133, 0.3)', 'rgba(54, 161, 235, 0.3)', 'rgba(252, 79, 48, 0.3)', 'rgba(5, 140, 107, 0.3)', 'rgba(74, 3, 82, 0.3)', 'rgba(38, 36, 36, 0.3)'],\n            borderColor: ['#ff6385', '#36a1eb', '#fc4f30', '#058c6b', '#4a0352', '#262424'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      });\n    }\n\n    createJurisdiccionMunicipal() {\n      const ctx = this.BarChartMunicipales.nativeElement;\n      ctx.height = 400;\n      this.BarsMunicipales = new Chart(ctx, {\n        type: \"doughnut\",\n        data: {\n          labels: this.apiLeyendaMunicipal,\n          datasets: [{\n            label: \"# Miles de pesos\",\n            data: this.apiIngresoMunicipal,\n            backgroundColor: ['rgba(255, 99, 133, 0.3)', 'rgba(54, 161, 235, 0.3)', 'rgba(252, 79, 48, 0.3)', 'rgba(5, 140, 107, 0.3)', 'rgba(74, 3, 82, 0.3)', 'rgba(38, 36, 36, 0.3)'],\n            hoverBackgroundColor: ['#ff6385', '#36a1eb', '#fc4f30', '#058c6b', '#4a0352', '#262424']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n\n    createBarChartMensual() {\n      const ctx = this.BarChartMensual.nativeElement;\n      ctx.height = 400;\n      this.BarsMensual = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: this.customMonthValues,\n          datasets: [{\n            data: this.apiIngresoMensual,\n            label: \"Ingreso Municipal Mensual\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(54, 161, 235,0.4)\",\n            borderColor: \"rgba(54, 161, 235,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(54, 161, 235,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(54, 161, 235,1)\",\n            pointHoverBorderColor: \"rgba(74, 3, 82,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            spanGaps: false\n          }]\n        }\n      });\n    }\n\n  }\n\n  Tab2Page.ɵfac = function Tab2Page_Factory(t) {\n    return new (t || Tab2Page)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i3.AlertController));\n  };\n\n  Tab2Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab2Page,\n    selectors: [[\"app-tab2\"]],\n    viewQuery: function Tab2Page_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BarChartSemanal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BarChartMunicipales = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BarChartMensual = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BarChartAnual = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BarChartSeleccionMensual = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BarChartSeleccionDiaria = _t.first);\n      }\n    },\n    decls: 59,\n    vars: 9,\n    consts: [[\"slot\", \"fixed\", 3, \"ionRefresh\"], [\"pullingIcon\", \"chevron-down-circle-outline\", \"pullingText\", \"Haz pull para recargar\", \"refreshingSpinner\", \"lines\", \"refreshingText\", \"Refrescando resultados...\"], [\"mode\", \"ios\", \"color\", \"secondary\"], [4, \"ngFor\", \"ngForOf\"], [\"mode\", \"ios\", 1, \"tarjetadeotras\"], [1, \"titulo-cards\"], [\"BarChartMunicipales\", \"\"], [\"mode\", \"ios\"], [\"value\", \"2020-01-01\", \"min\", \"2019\", \"max\", \"2021\", \"displayFormat\", \"DD/MM/YYYY\", 3, \"dayShortNames\", \"ngModel\", \"ngModelChange\", \"ionChange\"], [1, \"loading\"], [4, \"ngIf\"], [\"class\", \"loading\", \"name\", \"lines\", \"placeholder\", \"Indique la fecha\", 4, \"ngIf\"], [\"BarChartSeleccionDiaria\", \"\"], [\"BarChartSemanal\", \"\"], [\"value\", \"2020-01-01\", \"min\", \"2019\", \"max\", \"2021\", \"displayFormat\", \"MM/YYYY\", 3, \"dayShortNames\", \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"BarChartSeleccionMensual\", \"\"], [\"BarChartMensual\", \"\"], [3, \"src\"], [1, \"titulo\"], [\"name\", \"lines\", \"placeholder\", \"Indique la fecha\", 1, \"loading\"]],\n    template: function Tab2Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"ion-content\");\n        i0.ɵɵelementStart(2, \"ion-refresher\", 0);\n        i0.ɵɵlistener(\"ionRefresh\", function Tab2Page_Template_ion_refresher_ionRefresh_2_listener($event) {\n          return ctx.doRefresh($event);\n        });\n        i0.ɵɵelement(3, \"ion-refresher-content\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-card\", 2);\n        i0.ɵɵtemplate(5, Tab2Page_ion_card_header_5_Template, 4, 1, \"ion-card-header\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-card\", 4);\n        i0.ɵɵelementStart(7, \"ion-card-header\");\n        i0.ɵɵelementStart(8, \"h5\", 5);\n        i0.ɵɵtext(9, \"Ingreso de Jurisdicion Municipal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-card-content\");\n        i0.ɵɵelement(11, \"canvas\", null, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-card\", 7);\n        i0.ɵɵelementStart(14, \"ion-card-header\");\n        i0.ɵɵelementStart(15, \"h5\", 5);\n        i0.ɵɵtext(16, \"Ingreso Diario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-item\");\n        i0.ɵɵelementStart(18, \"ion-label\");\n        i0.ɵɵtext(19, \"Seleccionar dia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-datetime\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function Tab2Page_Template_ion_datetime_ngModelChange_20_listener($event) {\n          return ctx.myday = $event;\n        })(\"ionChange\", function Tab2Page_Template_ion_datetime_ionChange_20_listener() {\n          return ctx.var_ingreso_pordia(ctx.myday);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-card-content\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵelementStart(23, \"div\", 9);\n        i0.ɵɵtemplate(24, Tab2Page_h4_24_Template, 2, 0, \"h4\", 10);\n        i0.ɵɵtemplate(25, Tab2Page_ion_spinner_25_Template, 1, 0, \"ion-spinner\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\");\n        i0.ɵɵelement(27, \"canvas\", null, 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ion-card\", 7);\n        i0.ɵɵelementStart(30, \"ion-card-header\");\n        i0.ɵɵelementStart(31, \"h5\", 5);\n        i0.ɵɵtext(32, \"Recaudaci\\u00F3n Semanal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"ion-card-content\");\n        i0.ɵɵelement(34, \"canvas\", null, 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ion-card\", 7);\n        i0.ɵɵelementStart(37, \"ion-card-header\");\n        i0.ɵɵelementStart(38, \"h5\", 5);\n        i0.ɵɵtext(39, \"Ingreso Mensual\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"ion-item\");\n        i0.ɵɵelementStart(41, \"ion-label\");\n        i0.ɵɵtext(42, \"Seleccionar el mes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"ion-datetime\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function Tab2Page_Template_ion_datetime_ngModelChange_43_listener($event) {\n          return ctx.mydate = $event;\n        })(\"ionChange\", function Tab2Page_Template_ion_datetime_ionChange_43_listener() {\n          return ctx.var_ingresodelMes(ctx.mydate);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"ion-card-content\");\n        i0.ɵɵelementStart(45, \"div\");\n        i0.ɵɵelementStart(46, \"div\", 9);\n        i0.ɵɵtemplate(47, Tab2Page_h4_47_Template, 2, 0, \"h4\", 10);\n        i0.ɵɵtemplate(48, Tab2Page_ion_spinner_48_Template, 1, 0, \"ion-spinner\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\");\n        i0.ɵɵelement(50, \"canvas\", null, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"ion-card\", 7);\n        i0.ɵɵelementStart(53, \"ion-card-header\");\n        i0.ɵɵelementStart(54, \"h5\", 5);\n        i0.ɵɵtext(55, \"Recaudaci\\u00F3n Mensual Hist\\u00F3rica\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"ion-card-content\");\n        i0.ɵɵelement(57, \"canvas\", null, 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logos);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"dayShortNames\", ctx.customDayShortNames)(\"ngModel\", ctx.myday);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoadingDiario);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoadingDiario);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"dayShortNames\", ctx.customDayShortNames)(\"ngModel\", ctx.mydate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoadingMensual);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoadingMensual);\n      }\n    },\n    directives: [i4.HeaderComponent, i3.IonContent, i3.IonRefresher, i3.IonRefresherContent, i3.IonCard, i5.NgForOf, i3.IonCardHeader, i3.IonCardTitle, i3.IonCardContent, i3.IonItem, i3.IonLabel, i3.IonDatetime, i3.SelectValueAccessor, i6.NgControlStatus, i6.NgModel, i5.NgIf, i3.IonSpinner],\n    styles: [\".titulo[_ngcontent-%COMP%], .titulo-cards[_ngcontent-%COMP%]{text-align:center!important}.tarjetadeotras[_ngcontent-%COMP%]{height:auto;width:auto}.loading[_ngcontent-%COMP%]{text-align:center;color:#d8d8d8}\"]\n  });\n  return Tab2Page;\n})();","map":null,"metadata":{},"sourceType":"module"}